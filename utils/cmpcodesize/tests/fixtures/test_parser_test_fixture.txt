Load command 0
      cmd LC_SEGMENT_64
  cmdsize 1192
  segname __TEXT
   vmaddr 0x0000000000000000
   vmsize 0x00000000004ed000
  fileoff 0
 filesize 5165056
  maxprot rwx
 initprot r-x
   nsects 14
    flags (none)
Section
  sectname __text
   segname __TEXT
      addr 0x0000000000002a10
      size 0x00000000004cdb75
    offset 10768
     align 2^4 (16)
    reloff 0
    nreloc 0
      type S_REGULAR
attributes PURE_INSTRUCTIONS SOME_INSTRUCTIONS
 reserved1 0
 reserved2 0
Section
  sectname __stubs
   segname __TEXT
      addr 0x00000000004d0586
      size 0x00000000000004aa
    offset 5047686
     align 2^1 (2)
    reloff 0
    nreloc 0
      type S_SYMBOL_STUBS
attributes PURE_INSTRUCTIONS SOME_INSTRUCTIONS
 reserved1 0 (index into indirect symbol table)
 reserved2 6 (size of stubs)
Section
  sectname __bss
   segname __DATA
      addr 0x000000000051cb80
      size 0x0000000000000768
    offset 0
     align 2^3 (8)
    reloff 0
    nreloc 0
      type S_ZEROFILL
attributes (none)
 reserved1 0
 reserved2 0
Load command 2
      cmd LC_SEGMENT_64
  cmdsize 72
  segname __LINKEDIT
   vmaddr 0x000000000051e000
   vmsize 0x0000000000380000
  fileoff 5361664
 filesize 3667824
  maxprot rwx
 initprot r--
   nsects 0
    flags (none)
Load command 3
          cmd LC_ID_DYLIB
      cmdsize 56
         name @rpath/libswiftCore.dylib (offset 24)
   time stamp 1 Wed Dec 31 19:00:01 1969
      current version 0.0.0
compatibility version 0.0.0
Load command 4
            cmd LC_DYLD_INFO_ONLY
        cmdsize 48
     rebase_off 5361664
    rebase_size 5592
       bind_off 5367256
      bind_size 1376
  weak_bind_off 5368632
 weak_bind_size 88
  lazy_bind_off 5368720
 lazy_bind_size 3792
     export_off 5372512
    export_size 411520
Load command 5
     cmd LC_SYMTAB
 cmdsize 24
  symoff 5805504
   nsyms 74393
  stroff 6997448
 strsize 2032040
Load command 6
            cmd LC_DYSYMTAB
        cmdsize 80
      ilocalsym 0
      nlocalsym 64672
     iextdefsym 64672
     nextdefsym 9541
      iundefsym 74213
      nundefsym 180
         tocoff 0
           ntoc 0
      modtaboff 0
        nmodtab 0
   extrefsymoff 0
    nextrefsyms 0
 indirectsymoff 6995792
  nindirectsyms 414
      extreloff 0
        nextrel 0
      locreloff 0
        nlocrel 0
Load command 7
     cmd LC_UUID
 cmdsize 24
    uuid 03B6D073-299B-3D21-A3E4-A8F78533DFC6
Load command 8
      cmd LC_VERSION_MIN_MACOSX
  cmdsize 16
  version 10.9
      sdk 10.11
Load command 9
      cmd LC_SOURCE_VERSION
  cmdsize 16
  version 0.0
Load command 10
          cmd LC_LOAD_DYLIB
      cmdsize 56
         name /usr/lib/libobjc.A.dylib (offset 24)
   time stamp 2 Wed Dec 31 19:00:02 1969
      current version 228.0.0
compatibility version 1.0.0
Load command 11
          cmd LC_LOAD_DYLIB
      cmdsize 96
         name /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (offset 24)
   time stamp 2 Wed Dec 31 19:00:02 1969
      current version 1256.1.0
compatibility version 300.0.0
Load command 12
          cmd LC_LOAD_DYLIB
      cmdsize 104
         name /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (offset 24)
   time stamp 2 Wed Dec 31 19:00:02 1969
      current version 1256.14.0
compatibility version 150.0.0
Load command 13
          cmd LC_LOAD_DYLIB
      cmdsize 48
         name /usr/lib/libc++.1.dylib (offset 24)
   time stamp 2 Wed Dec 31 19:00:02 1969
      current version 120.1.0
compatibility version 1.0.0
Load command 14
          cmd LC_LOAD_DYLIB
      cmdsize 56
         name /usr/lib/libSystem.B.dylib (offset 24)
   time stamp 2 Wed Dec 31 19:00:02 1969
      current version 1226.10.1
compatibility version 1.0.0
Load command 15
      cmd LC_FUNCTION_STARTS
  cmdsize 16
  dataoff 5784032
 datasize 21472
Load command 16
      cmd LC_DATA_IN_CODE
  cmdsize 16
  dataoff 5805504
 datasize 0
(__TEXT,__text) section
__TFs10minElementuRxs12__:
0000000000002a10	pushq	%rbp
0000000000002a11	movq	%rsp, %rbp
0000000000002a14	pushq	%r14
0000000000002a16	pushq	%rbx
0000000000002a17	subq	$0x80, %rsp
0000000000002a1e	movq	0x20(%rbp), %rax
0000000000002a22	movq	0x10(%rbp), %rcx
0000000000002a26	movq	%rdx, -0x18(%rbp)
0000000000002a2a	movq	%r8, -0x20(%rbp)
0000000000002a2e	movq	%rcx, -0x28(%rbp)
0000000000002a32	movq	%rax, -0x30(%rbp)
0000000000002a36	movq	%rsi, -0x38(%rbp)
0000000000002a3a	movq	%rdi, -0x40(%rbp)
0000000000002a3e	jmp	0x2a40
0000000000002a40	jmp	0x2a42
0000000000002a42	jmp	0x2a44
0000000000002a44	jmp	0x2a46
0000000000002a46	jmp	0x2a48
0000000000002a48	jmp	0x2a4a
0000000000002a4a	jmp	0x2a4c
0000000000002a4c	leaq	0x4d463d(%rip), %rdi
0000000000002a53	movl	$0x24, %eax
0000000000002a58	movl	%eax, %esi
0000000000002a5a	movl	$0x1, %edx
0000000000002a5f	callq	0x2b90
0000000000002a64	leaq	0x4d460a(%rip), %rdi
0000000000002a6b	movl	$0xb, %r8d
0000000000002a71	movl	%r8d, %esi
0000000000002a74	movl	$0x2, %r8d
0000000000002a7a	leaq	0x4d45af(%rip), %r9
0000000000002a81	movl	$0x44, %r10d
0000000000002a87	movl	%r10d, %r11d
0000000000002a8a	movl	$0x15, %r10d
0000000000002a90	movl	%r10d, %ebx
0000000000002a93	movq	%rdx, -0x48(%rbp)
0000000000002a97	movl	%r8d, %edx
0000000000002a9a	movq	%rcx, -0x50(%rbp)
0000000000002a9e	movq	%rax, %rcx
0000000000002aa1	movq	-0x48(%rbp), %r8
0000000000002aa5	movq	-0x50(%rbp), %rax
0000000000002aa9	movq	%r9, -0x58(%rbp)
0000000000002aad	movq	%rax, %r9
0000000000002ab0	movq	-0x58(%rbp), %r14
0000000000002ab4	movq	%r14, (%rsp)
0000000000002ab8	movq	$0x44, 0x8(%rsp)
0000000000002ac1	movl	$0x2, 0x10(%rsp)
0000000000002ac9	movq	$0x15, 0x18(%rsp)
0000000000002ad2	movq	%r11, -0x60(%rbp)
0000000000002ad6	movq	%rbx, -0x68(%rbp)
0000000000002ada	callq	0x84e00
0000000000002adf	nop
__TFSSCfT21_builtinString:
0000000000002b90	pushq	%rbp
0000000000002b91	movq	%rsp, %rbp
0000000000002b94	pushq	%r15
0000000000002b96	pushq	%r14
0000000000002b98	pushq	%r13
0000000000002b9a	pushq	%r12
0000000000002b9c	pushq	%rbx
0000000000002b9d	subq	$0x178, %rsp            ## imm = 0x178
0000000000002ba4	movb	%dl, %al
0000000000002ba6	movq	%rdi, -0x48(%rbp)
0000000000002baa	movq	%rsi, -0x50(%rbp)
0000000000002bae	movb	%al, %cl
0000000000002bb0	andb	$0x1, %cl
0000000000002bb3	movb	%cl, -0x58(%rbp)
0000000000002bb6	testb	$0x1, %al
0000000000002bb8	movq	%rsi, -0x78(%rbp)
0000000000002bbc	movq	%rdi, -0x80(%rbp)
0000000000002bc0	jne	0x2bc4
0000000000002bc2	jmp	0x2c02
0000000000002bc4	xorl	%eax, %eax
0000000000002bc6	movl	%eax, %edx
0000000000002bc8	xorl	%ecx, %ecx
0000000000002bca	movq	$0x0, -0x70(%rbp)
0000000000002bd2	movq	-0x70(%rbp), %r8
0000000000002bd6	movq	-0x80(%rbp), %rdi
0000000000002bda	movq	-0x78(%rbp), %rsi
0000000000002bde	callq	0x2dbae0
0000000000002be3	movq	%rax, %rdi
0000000000002be6	movq	%rdx, %rsi
0000000000002be9	movq	%rcx, %rdx
0000000000002bec	callq	0x9c9c0
0000000000002bf1	movq	%rax, -0x40(%rbp)
0000000000002bf5	movq	%rdx, -0x38(%rbp)
0000000000002bf9	movq	%rcx, -0x30(%rbp)
0000000000002bfd	jmp	0x2dc6
0000000000002c02	leaq	0x4f9d87(%rip), %rax
0000000000002c09	addq	$0x8, %rax
0000000000002c0d	movq	-0x80(%rbp), %rdi
0000000000002c11	movq	-0x78(%rbp), %rsi
0000000000002c15	movq	%rax, %rdx
0000000000002c18	callq	0x2cb50
0000000000002c1d	leaq	-0x68(%rbp), %rsi
0000000000002c21	movq	%rax, -0x68(%rbp)
0000000000002c25	movq	%rdx, -0x60(%rbp)
0000000000002c29	movq	%rsi, -0x88(%rbp)
0000000000002c30	callq	0x91d70
0000000000002c35	movq	%rax, -0x90(%rbp)
0000000000002c3c	callq	0x91dc0
0000000000002c41	movq	%rax, -0x98(%rbp)
0000000000002c48	callq	0x91e10
0000000000002c4d	movq	%rax, -0xa0(%rbp)
0000000000002c54	callq	0x91ec0
0000000000002c59	leaq	0x501c88(%rip), %rdx
0000000000002c60	addq	$0x8, %rdx
0000000000002c64	leaq	0x4f48ad(%rip), %rcx
0000000000002c6b	leaq	0x4f4d86(%rip), %r9
0000000000002c72	leaq	0x4f9d17(%rip), %rsi
0000000000002c79	addq	$0x8, %rsi
0000000000002c7d	leaq	0x4f4afc(%rip), %rdi
0000000000002c84	leaq	0x4fa64d(%rip), %r8
0000000000002c8b	addq	$0x8, %r8
0000000000002c8f	leaq	0x4f0d62(%rip), %r10
0000000000002c96	leaq	0x4f0c03(%rip), %r11
0000000000002c9d	leaq	0x4f0c64(%rip), %rbx
0000000000002ca4	leaq	0x4f370d(%rip), %r14
0000000000002cab	leaq	0x4f3736(%rip), %r15
0000000000002cb2	leaq	0x4eec27(%rip), %r12
0000000000002cb9	movq	%rdi, -0xa8(%rbp)
0000000000002cc0	movq	%rdx, %rdi
0000000000002cc3	movq	-0x88(%rbp), %r13
0000000000002cca	movq	%rsi, -0xb0(%rbp)
0000000000002cd1	movq	%r13, %rsi
0000000000002cd4	movq	-0x90(%rbp), %r13
0000000000002cdb	movq	%r8, -0xb8(%rbp)
0000000000002ce2	movq	%r13, %r8
0000000000002ce5	movq	-0xb0(%rbp), %r13
0000000000002cec	movq	%r13, (%rsp)
0000000000002cf0	movq	-0x98(%rbp), %r13
0000000000002cf7	movq	%r13, 0x8(%rsp)
0000000000002cfc	movq	-0xa8(%rbp), %r13
0000000000002d03	movq	%r13, 0x10(%rsp)
0000000000002d08	movq	-0xb8(%rbp), %r13
0000000000002d0f	movq	%r13, 0x18(%rsp)
0000000000002d14	movq	%r10, 0x20(%rsp)
0000000000002d19	movq	%r13, 0x28(%rsp)
0000000000002d1e	movq	%r11, 0x30(%rsp)
0000000000002d23	movq	%r13, 0x38(%rsp)
0000000000002d28	movq	%rbx, 0x40(%rsp)
0000000000002d2d	movq	%r13, 0x48(%rsp)
0000000000002d32	movq	-0xa0(%rbp), %r13
0000000000002d39	movq	%r13, 0x50(%rsp)
0000000000002d3e	movq	%r14, 0x58(%rsp)
0000000000002d43	movq	%r15, 0x60(%rsp)
0000000000002d48	movq	%rax, 0x68(%rsp)
0000000000002d4d	movq	%r12, 0x70(%rsp)
0000000000002d52	movq	-0xb0(%rbp), %rax
0000000000002d59	movq	%rax, 0x78(%rsp)
0000000000002d5e	movq	-0xb8(%rbp), %r14
0000000000002d65	movq	%r14, 0x80(%rsp)
0000000000002d6d	movq	%r10, 0x88(%rsp)
0000000000002d75	movq	%r14, 0x90(%rsp)
0000000000002d7d	movq	%r11, 0x98(%rsp)
0000000000002d85	movq	%r14, 0xa0(%rsp)
0000000000002d8d	movq	%rbx, 0xa8(%rsp)
0000000000002d95	movq	%r14, 0xb0(%rsp)
0000000000002d9d	movq	%r13, 0xb8(%rsp)
0000000000002da5	movq	%rax, 0xc0(%rsp)
0000000000002dad	movq	%rax, 0xc8(%rsp)
0000000000002db5	callq	0x91780
0000000000002dba	movq	%rax, -0x40(%rbp)
0000000000002dbe	movq	%rdx, -0x38(%rbp)
0000000000002dc2	movq	%rcx, -0x30(%rbp)
0000000000002dc6	movq	-0x40(%rbp), %rax
0000000000002dca	movq	-0x38(%rbp), %rdx
0000000000002dce	movq	-0x30(%rbp), %rcx
0000000000002dd2	movq	%rcx, %rdi
0000000000002dd5	movq	%rax, -0xc0(%rbp)
0000000000002ddc	movq	%rdx, -0xc8(%rbp)
0000000000002de3	movq	%rcx, -0xd0(%rbp)
0000000000002dea	callq	0x4a26a0
0000000000002def	movq	-0x30(%rbp), %rdi
0000000000002df3	callq	0x4a2710
0000000000002df8	movq	-0xc0(%rbp), %rax
0000000000002dff	movq	-0xc8(%rbp), %rdx
0000000000002e06	movq	-0xd0(%rbp), %rcx
0000000000002e0d	addq	$0x178, %rsp            ## imm = 0x178
0000000000002e14	popq	%rbx
0000000000002e15	popq	%r12
0000000000002e17	popq	%r13
0000000000002e19	popq	%r14
0000000000002e1b	popq	%r15
0000000000002e1d	popq	%rbp
0000000000002e1e	retq
0000000000002e1f	nop